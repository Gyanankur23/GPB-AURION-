<script>
    const chatContent = document.getElementById("chat-content");
    const chatForm = document.getElementById("chat-form");
    const userInput = document.getElementById("user-input");

    const assistantDetails = `
You are GPB AURION, an elegant and intelligent AI assistant designed by Gyanankur P. Baruah.
You are friendly, concise, highly knowledgeable, and helpful.
Avoid unnecessary verbosity. Only reply as GPB AURION.
`;

    function createMessageElement(message, isUser) {
        const messageDiv = document.createElement("div");
        messageDiv.textContent = message;
        messageDiv.classList.add(isUser ? "user-message" : "bot-message");
        return messageDiv;
    }

    async function fetchResponse(userMessage) {
        try {
            const response = await fetch("https://api.openai.com/v1/chat/completions", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": "Bearer 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"
                },
                body: JSON.stringify({
                    model: "gpt-3.5-turbo",
                    messages: [
                        { role: "system", content: assistantDetails.trim() },
                        { role: "user", content: userMessage }
                    ]
                })
            });

            if (!response.ok) {
                return "⚠️ Error: Please check your API key or try again later.";
            }

            const data = await response.json();
            return data.choices?.[0]?.message?.content.trim() || "⚠️ No valid response received.";
        } catch (error) {
            console.error("Network error:", error);
            return "⚠️ Network error: Please try again later.";
        }
    }

    chatForm.addEventListener("submit", async (event) => {
        event.preventDefault();

        const userMessage = userInput.value.trim();
        if (!userMessage) return;

        // Show user's message
        const userElement = createMessageElement(userMessage, true);
        chatContent.appendChild(userElement);

        userInput.value = ""; // clear input
        userInput.focus();

        // Show "Typing..." placeholder
        const loadingElement = createMessageElement("GPB AURION is typing...", false);
        chatContent.appendChild(loadingElement);
        chatContent.scrollTop = chatContent.scrollHeight;

        // Fetch and show bot response
        const botReply = await fetchResponse(userMessage);
        loadingElement.remove();
        const botElement = createMessageElement(botReply, false);
        chatContent.appendChild(botElement);
        chatContent.scrollTop = chatContent.scrollHeight;
    });
</script>